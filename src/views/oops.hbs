<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>OOPS</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta
        content="NIT Jalandhar, Dr B R Ambedkar NITJ, NITJ, National Institute of Technology Jalandhar, NITJ Website, NitJ IT Resource Bank, NitJ IT Notes,NitJ IT,NitJ IT PPTs, DSA, Data Structures and Algorithms, "
        name="keywords">
    <meta content="" name="description">

    <!-- Favicons -->
    <link rel="apple-touch-icon-precomposed" sizes="144x144"
        href="https://www.nitj.ac.in//images/ico/apple-touch-icon-144-precomposed.png" />
    <link rel="apple-touch-icon-precomposed" sizes="114x114"
        href="https://www.nitj.ac.in//images/ico/apple-touch-icon-114-precomposed.png" />
    <link rel="apple-touch-icon-precomposed" sizes="72x72"
        href="https://www.nitj.ac.in//images/ico/apple-touch-icon-72-precomposed.png" />
    <link rel="apple-touch-icon-precomposed"
        href="https://www.nitj.ac.in//images/ico/apple-touch-icon-57-precomposed.png" />
    <link rel="shortcut icon" href="https://www.nitj.ac.in//images/ico/favicon.ico" />

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;600&family=Nunito:wght@600;700;800&display=swap"
        rel="stylesheet">

    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="lib/animate/animate.min.css" rel="stylesheet">
    <link href="lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">

    <!-- Customized Bootstrap Stylesheet -->
    <link href="css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="css/style.css" rel="stylesheet">
</head>

<body>
    {{>header}}

    <!-- About Start -->
    <div class="container-xxl py-5">
        <div class="container">
            {{!-- <div class="col-lg-6 wow fadeInUp" data-wow-delay="0.1s" style="min-height: 400px;">
                <div class="position-relative h-100">
                    <img class="img-fluid position-absolute w-100 h-100" src="img/course-2.jpg" alt=""
                        style="object-fit: cover;">
                </div>
            </div> --}}
            <div class="text-center wow fadeInUp" data-wow-delay="0.1s" style="padding: 0px 100px 0px 100px;">
                <h4 class="section-title bg-white text-center text-primary px-3">Introduction to OOPS</h4>
                <h1 class="my-3">Object Oriented Programming</h1>
                <p class="my-3">Object-Oriented Programming or OOPs refers to languages that use objects in programming. Object-oriented programming aims to implement real-world entities like inheritance, hiding, polymorphism, etc in programming. The main aim of OOP is to bind together the data and the functions that operate on them so that no other part of the code can access this data except that function.</p>
            </div>
        </div>
    </div>
    <!-- About End -->

    <!-- Testimonial Start -->

    <div class="container-xxl py-5" data-wow-delay="0.1s">
        <div class="container">
            <div class="text-center">
                <h4 class="section-title bg-white text-center text-primary px-3">Theory</h4>
                <h1 class="my-3">Learn OOPS</h1>
                <br>
            </div>
            <div class="wow fadeInUp" data-wow-delay="0.1s" style="padding: 0px 100px 0px 100px;">
                <h5 class="mb-0">Why do we need object-oriented programming?</h5><br>
                <p class="mb-0"><i class="fa fa-arrow-right text-primary me-2"></i>To make the development and maintenance of projects more effortless</p>
                <p class="mb-0"><i class="fa fa-arrow-right text-primary me-2"></i>To provide the feature of data hiding that is good for security concerns</p>
                <p class="mb-0"><i class="fa fa-arrow-right text-primary me-2"></i>We can solve real-world problems if we are using object-oriented programming</p>
                <p class="mb-0"><i class="fa fa-arrow-right text-primary me-2"></i>It ensures code reusability. </p>
                <p class="mb-0"><i class="fa fa-arrow-right text-primary me-2"></i>It lets us write generic code: which will work with a range of data, so we don’t have to write basic stuff over and over again.</p>
                <br>
                <p><b>The four pillars of object-oriented programming (OOP) are :</b></p><br>
                <p>1. <b>Encapsulation :</b> Encapsulation refers to the bundling of data and methods that operate on the data into a single unit, known as a class. It allows data to be hidden and only accessible through well-defined interfaces. Encapsulation helps in achieving data abstraction, information hiding, and modularity, which leads to better code organization and maintenance.</p>
                <br><p>2. <b>Inheritance  :</b>Inheritance is a mechanism by which one class (subclass or derived class) can inherit properties and behavior from another class (superclass or base class). This promotes code reuse and allows for the creation of a hierarchical relationship between classes. Subclasses inherit attributes and methods from their superclass and can also extend or override them as needed.</p>
                <br><p>3. <b>Polymorphism  :</b>Polymorphism allows objects of different classes to be treated as objects of a common superclass. It enables a single interface to represent multiple underlying data types or classes. Polymorphism can be achieved through method overloading and method overriding. Method overloading involves defining multiple methods with the same name but different parameters, while method overriding involves redefining a method in a subclass to provide a specific implementation.</p>
                <br><p>4. <b>Abstraction :</b>Abstraction involves representing the essential features of an object or class while hiding the implementation details. It focuses on what an object does rather than how it does it. Abstraction allows developers to create models that simulate real-world entities, making it easier to manage complexity and design systems that are easier to understand and maintain. Abstraction is often achieved through abstract classes and interfaces, which define a blueprint for subclasses to implement.</p>
            </div>
            <br>
            <div class="row g-4 justify-content-lg-center">
                <div class="col-lg-10 col-sm-12 wow fadeInUp" data-wow-delay="0.3s">
                    <a target="_blank">
                    <div class="service-item text-left click_cursor pt-3">
                        <div class="p-1">
                            <h5 class="mb-3 ms-5">Learn Theory(Go to "OOPS" in semester 3 in Academics section.)</h5>
                        </div>
                    </div>
                    </a>
                </div>
            </div>
            <br>
            <div class="row g-4 justify-content-lg-center">
                <div class="col-lg-10 col-sm-12 wow fadeInUp" data-wow-delay="0.3s">
                    <a href="https://www.geeksforgeeks.org/introduction-of-object-oriented-programming/" target="_blank">
                    <div class="service-item text-left click_cursor pt-3">
                        <div class="p-1">
                            <h5 class="mb-3 ms-5">GFG – Introduction of Object Oriented Programming</h5>
                        </div>
                    </div>
                </a>
                </div>
            </div>
            <br>
             <div class="row g-4 justify-content-lg-center">
                <div class="col-lg-10 col-sm-12 wow fadeInUp" data-wow-delay="0.3s">
                    <a href="https://whimsical.com/object-oriented-programming-cheatsheet-by-love-babbar-YbSgLatbWQ4R5paV7EgqFw" target="_blank">
                    <div class="service-item text-left click_cursor pt-3">
                        <div class="p-1">
                            <h5 class="mb-3 ms-5">Love Babbar cheatsheet – Object Oriented Programming </h5>
                        </div>
                    </div>
                </a>
                </div>
            </div>
        </div>
    </div>

    <div class="container-xxl py-5" data-wow-delay="0.1s">
        <div class="container">
            <div class="text-center">
                <h4 class="section-title bg-white text-center text-primary px-3">Final Touch</h4>
                <h1 class="my-3">Interview Questions</h1>
            </div>
            <div class="row g-4 justify-content-lg-center"  onclick="show_answer('ans1')">
                <div class="col-lg-10 col-sm-12 wow fadeInUp" data-wow-delay="0.3s">
                    <div class="service-item text-left click_cursor pt-3">
                        <div class="p-3">
                            <p class="mb-0">1. What is Object Oriented Programming (OOPs)?</p>
                            <p id="ans1" class="interview_ans mb-0"><i class="fa fa-arrow-right text-primary me-2"></i>Object Oriented Programming (also known as OOPs) is a programming paradigm where the complete software operates as a bunch of objects talking to each other. An object is a collection of data and the methods which operate on that data.</p>
                        </div>
                    </div>
                </div>
            </div>
            <br>
            
            <div class="row g-4 justify-content-lg-center"  onclick="show_answer('ans2')">
                <div class="col-lg-10 col-sm-12 wow fadeInUp" data-wow-delay="0.3s">
                    <div class="service-item text-left click_cursor pt-3">
                        <div class="p-3">
                            <p class="mb-0">2. What are types of polymorphism? </p>
                            <p id="ans2" class="interview_ans mb-0"><i class="fa fa-arrow-right text-primary me-2"></i>Polymorphism can be classified into two types based on the time when the call to the object or function is resolved. <br>They are as follows :
                             <br><b>Compile Time Polymorphism</b> - compile time polymorphism, also known as static polymorphism or early binding is the type of polymorphism where the binding of the call to its code is done at the compile time. Method overloading or operator overloading are examples of compile-time polymorphism.
                             <br><b>Runtime Polymorphism </b>- Also known as dynamic polymorphism or late binding, runtime polymorphism is the type of polymorphism where the actual implementation of the function is determined during the runtime or execution. Method overriding is an example of this method.</p>
                        </div>
                    </div>
                </div>
            </div>
            <br>

            <div class="row g-4 justify-content-lg-center"  onclick="show_answer('ans3')">
                <div class="col-lg-10 col-sm-12 wow fadeInUp" data-wow-delay="0.3s">
                    <div class="service-item text-left click_cursor pt-3">
                        <div class="p-3">
                            <p class="mb-0">3. What are some commonly used Object Oriented Programming Languages?</p>
                            <p id="ans3" class="interview_ans mb-0"><i class="fa fa-arrow-right text-primary me-2"></i>C++
                            <br><i class="fa fa-arrow-right text-primary me-2"></i>Java
                            <br><i class="fa fa-arrow-right text-primary me-2"></i>Python
                            <br><i class="fa fa-arrow-right text-primary me-2"></i>C#
                            <br><i class="fa fa-arrow-right text-primary me-2"></i>Javascript</p>
                        </div>
                    </div>
                </div>
            </div>
            <br>

             <div class="row justify-content-lg-center"  onclick="show_answer('ans4')">
                <div class="col-lg-10 col-sm-12 wow fadeInUp" data-wow-delay="0.3s">
                    <div class="service-item text-left click_cursor pt-3">
                        <div class="p-3">
                            <p class="mb-0">4. What is the difference between overloading and overriding?</p>
                            <p id="ans4" class="interview_ans mb-0"><i class="fa fa-arrow-right text-primary me-2"></i>A compile-time polymorphism feature called overloading allows an entity to have numerous implementations of the same name. Method overloading and operator overloading are two examples.
                          <br>Overriding is a form of runtime polymorphism where an entity with the same name but a different implementation is executed. It is implemented with the help of virtual functions.</p>
                        </div>
                    </div>
                </div>
            </div>
            <br>

             <div class="row g-4 justify-content-lg-center"  onclick="show_answer('ans5')">
                <div class="col-lg-10 col-sm-12 wow fadeInUp" data-wow-delay="0.3s">
                    <div class="service-item text-left click_cursor pt-3">
                        <div class="p-3">
                            <p class="mb-0">5. What different types of inheritance are there?</p>
                            <p id="ans5" class="interview_ans mb-0"><i class="fa fa-arrow-right text-primary me-2"></i>Inheritance can be classified into 5 types which are as follows :<br>
                            Single Inheritance: Child class derived directly from the base class<br>
                            1. <b>Multiple Inheritance :</b> Child class derived from multiple base classes.<br>
                            2. <b>Multilevel Inheritance :</b> Child class derived from the class which is also derived from another base class.<br>
                            3. <b>Hierarchical Inheritance :</b> Multiple child classes derived from a single base class.<br>
                            4. <b>Hybrid Inheritance :</b> Inheritance consisting of multiple inheritance types of the above specified.<br></p>
                        </div>
                    </div>
                </div>
            </div>
            <br>

          <div class="row g-4 justify-content-lg-center">
                <div class="col-lg-10 col-sm-12 wow fadeInUp" data-wow-delay="0.3s">
                    <a href="https://www.geeksforgeeks.org/oops-interview-questions/" target="_blank">
                    <div class="service-item text-left click_cursor pt-3">
                        <div class="p-1">
                            <h5 class="mb-3 ms-5">More Interview Quetions</h5>
                        </div>
                    </div>
                </a>
                </div>
            </div>
            <br>

        </div>
    </div>
    <!-- model image -->
    <!-- The Model -->
    <div id="myModel" class="model">
        <!-- The Close Button -->
        <span class="close">&times;</span>
        <!-- Model Content (The Image) -->
        <img class="model-content" id="img01">
        <!-- Model Caption (Image Text) -->
        <div id="model_caption"></div>
    </div>
    <!-- Testimonial End -->

    <!-- JavaScript Libraries -->
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="lib/wow/wow.min.js"></script>
    <script src="lib/easing/easing.min.js"></script>
    <script src="lib/waypoints/waypoints.min.js"></script>
    <script src="lib/owlcarousel/owl.carousel.min.js"></script>

    {{>footer}}

    <!-- Template Javascript -->
    <script src="js/main.js"></script>
    <script src="js/home.js"></script>
    <script src="js/dsa.js"></script>
</body>

</html>